'''
Запишите выражение для генератора, который бы возвращал целые числа от 2 по 10 000 (включительно)
с шагом 1 (то есть, 2, 3, 4, ..., 10 000). Присвойте этот генератор переменной gen.
Вызывать генератор и отображать что-либо на экране не нужно, только задать его.
'''
# gen = (x for x in range(2,10001))


'''
На вход программе поступают два целых числа a и b (a < b), записанные в одну строчку через пробел. 
На их основе запишите генератор для формирования квадратов чисел в диапазоне [a; b] (включительно, квадратные скобки об этом говорят).
Преобразуйте этот генератор в кортеж чисел (без использования операторов циклов) и присвойте эту коллекцию переменной tp.
P. S. На экране ничего отображать не нужно, только создать кортеж на основе генератора.
'''
# a, b = map(int, input().split())
# g = (x**2 for x in range(a,b+1))
# tp = tuple(g)
# print(tp)
# print(type(tp))


'''
На вход программе поступают два целых числа a и b (a < b), записанные в одну строчку через пробел. 
Определите генератор, который бы выдавал модули целых чисел из диапазона [a; b] (включительно). 
В цикле выведите первые пять значений этого генератора. Каждое значение с новой строки. 
(Гарантируется, что пять значений имеются).
'''
# a,b = map(int, input().split())
# gen = (abs(x) for x in range(a,b+1))
# for i,x in enumerate(gen):
#     if i < 5:
#         print(x)
#     else:
#         break

# i=1
# while i < 6:
#     print(next(gen))
#     i+=1


'''
На вход программе подается целое положительное число a. 
Необходимо его прочитать и объявить генератор, который бы возвращал модули чисел в диапазоне [-a; a] (включительно),
а затем еще один генератор, который бы вычислял кубы чисел (возведение в степень 3), 
возвращаемых первым генератором.
Вывести в одну строчку через пробел первые четыре значения. (Гарантируется, что генератор выдает, как минимум четыре значения).
'''
# a = int(input())
# gen = (abs(x) for x in range(-a, a+1))
# gen3 = (x*x*x for x in gen)
# for i in range(4):
#     print(next(gen3), end=' ')


'''
Используя символы малых букв латинского алфавита (строка ascii_lowercase):
from string import ascii_lowercase
запишите генератор, который бы возвращал все возможные сочетания из двух букв латинского алфавита. 
Выведите первые 50 сочетаний на экран в строку через пробел.
Например, первые семь начальных сочетаний имеют вид:
aa ab ac ad ae af ag
'''
# from string import ascii_lowercase
# gen = (x+y for x in ascii_lowercase for y in ascii_lowercase)
# for i in range(50):
#     print(next(gen), end=' ')


'''
Объявите в программе следующий список из названий городов:
cities = ["Москва", "Ульяновск", "Самара", "Уфа", "Омск", "Тула"]
Затем, необходимо объявить генератор, который бы используя этот список, 
выдавал 1 000 000 наименований городов по циклу. 
То есть, дойдя до конца списка, возвращался в начало и повторял перебор. 
И так, для выдачи миллиона названий. 
Вывести на экран первые 20 наименований городов с помощью генератора в одну строчку через пробел.
'''
# cities = ["Москва", "Ульяновск", "Самара", "Уфа", "Омск", "Тула"]
# gen = (cities[i%6] for i in range(1000000))
# for i in range(20):
#     print(next(gen), end=' ')


'''
Необходимо объявить генератор, который бы выдавал значения функции f(x)=1/2⋅x**2−2 
для аргумента x в диапазоне [a; b] (включительно) с шагом 0.01. 
Целые числа a, b (a< b) подаются на вход программе в одну строчку через пробел. 
Нужно их прочитать и через генератор вывести на экран первые 20 значений функции с точностью до сотых.
P.S. Значения функции в генераторе вычислять командой:
f(x) = 0.5 * pow(x, 2) - 2.0    
'''
def f(x):
    return 0.5 * pow(x, 2) - 2.0


a,b = map(int,input().split())
gen = (f(x/100) for x in range(a*100,(b+1)*100))
print(*(round(next(gen),2) for _ in range(20)))